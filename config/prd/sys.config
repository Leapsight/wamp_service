[
 {wamp_service,
  [
   {session_pools,
    [
     {wamp_sessions,
      [
       %% pool args
       {size, 5},
       {max_overflow, 20}
      ], [
          %% worker args
          %% wamp opts
          {hostname, "${WAMP_HOSTNAME}"},
          {port, "${WAMP_PORT}"},
          {realm, <<"${WAMP_REALM}">>},
          {encoding, "${WAMP_ENCODING}"},
          %% reconnect options
          {backoff, "${WAMP_BACKOFF}"},
          {retries, "${WAMP_RETRIES}"},
          %% service callbacks
          {callbacks,
           [
            {procedure, <<"com.example.add2">>, {wamp_service_example, add}},
            {procedure, <<"com.example.echo">>, {wamp_service_example, echo}, [<<"admin">>]},
            {procedure, <<"com.example.error">>, {wamp_service_example, error}},
            {procedure, <<"com.example.timeout">>, {wamp_service_example, timeout}},
            {subscription, <<"com.example.onhello">>, {wamp_service_example, onhello}}
           ]}
         ]},
     {wamp_call_sessions,
      [
       %% pool args
       {size, 2},
       {max_overflow, 10}
      ], [
          %% worker args
          %% wamp opts
          {hostname, "${WAMP_HOSTNAME}"},
          {port, "${WAMP_PORT}"},
          {realm, <<"${WAMP_REALM}">>},
          {encoding, "${WAMP_ENCODING}"},
          %% reconnect options
          {backoff, "${WAMP_BACKOFF}"},
          {retries, "${WAMP_RETRIES}"},
          %% service callbacks
          {callbacks, []}
         ]}
    ]}
  ]},

 {lager,
  [
   {log_root, "log"},
   %% Default handlers for lager/lager_event
   {handlers,
    [
     {lager_console_backend, debug}
    ]},

   %% Any other sinks
   {extra_sinks,
    [
     {audit_lager_event,
      [{handlers,
        [
         {lager_console_backend, debug}
        ]
       },
       {async_threshold, 500},
       {async_threshold_window, 50}]
     }]
   }
  ]},

 {sasl, [{sasl_error_logger, false}]}
].
